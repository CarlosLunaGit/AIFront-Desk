{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\CLIZARDE\\\\2024\\\\ProyectosPersonales\\\\aiFront-Desk\\\\frontend\\\\src\\\\index.tsx\";\nimport React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n// Initialize MSW\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nasync function enableMocking() {\n  if (process.env.NODE_ENV !== 'development') {\n    return;\n  }\n  const {\n    worker\n  } = await import('./mocks/browser');\n  return worker.start({\n    onUnhandledRequest: 'bypass' // Don't warn about unhandled requests\n  });\n}\nenableMocking().then(() => {\n  const root = ReactDOM.createRoot(document.getElementById('root'));\n  root.render(/*#__PURE__*/_jsxDEV(React.StrictMode, {\n    children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this));\n});\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();","map":{"version":3,"names":["React","ReactDOM","App","reportWebVitals","jsxDEV","_jsxDEV","enableMocking","process","env","NODE_ENV","worker","start","onUnhandledRequest","then","root","createRoot","document","getElementById","render","StrictMode","children","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["C:/Users/CLIZARDE/2024/ProyectosPersonales/aiFront-Desk/frontend/src/index.tsx"],"sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n// Initialize MSW\nasync function enableMocking() {\n  if (process.env.NODE_ENV !== 'development') {\n    return;\n  }\n\n  const { worker } = await import('./mocks/browser');\n  return worker.start({\n    onUnhandledRequest: 'bypass', // Don't warn about unhandled requests\n  });\n}\n\nenableMocking().then(() => {\n  const root = ReactDOM.createRoot(\n    document.getElementById('root') as HTMLElement\n  );\n  root.render(\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  );\n});\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,kBAAkB;AACvC,OAAO,aAAa;AACpB,OAAOC,GAAG,MAAM,OAAO;AACvB,OAAOC,eAAe,MAAM,mBAAmB;;AAE/C;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,eAAeC,aAAaA,CAAA,EAAG;EAC7B,IAAIC,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,aAAa,EAAE;IAC1C;EACF;EAEA,MAAM;IAAEC;EAAO,CAAC,GAAG,MAAM,MAAM,CAAC,iBAAiB,CAAC;EAClD,OAAOA,MAAM,CAACC,KAAK,CAAC;IAClBC,kBAAkB,EAAE,QAAQ,CAAE;EAChC,CAAC,CAAC;AACJ;AAEAN,aAAa,CAAC,CAAC,CAACO,IAAI,CAAC,MAAM;EACzB,MAAMC,IAAI,GAAGb,QAAQ,CAACc,UAAU,CAC9BC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAChC,CAAC;EACDH,IAAI,CAACI,MAAM,cACTb,OAAA,CAACL,KAAK,CAACmB,UAAU;IAAAC,QAAA,eACff,OAAA,CAACH,GAAG;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACS,CACpB,CAAC;AACH,CAAC,CAAC;;AAEF;AACA;AACA;AACArB,eAAe,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}