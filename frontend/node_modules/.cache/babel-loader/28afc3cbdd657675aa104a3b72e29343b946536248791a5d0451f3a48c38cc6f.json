{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\CLIZARDE\\\\2024\\\\ProyectosPersonales\\\\aiFront-Desk\\\\frontend\\\\src\\\\components\\\\Layout\\\\Layout.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport { AppBar, Box, CssBaseline, Drawer, IconButton, List, ListItem, ListItemIcon, ListItemText, Toolbar, Typography, useTheme, FormControl, InputLabel, Select, MenuItem } from '@mui/material';\nimport { Menu as MenuIcon, Dashboard as DashboardIcon, Message as MessageIcon, Hotel as HotelIcon, CreditCard as CreditCardIcon, Settings as SettingsIcon, BarChart as BarChartIcon, Business as BusinessIcon } from '@mui/icons-material';\nimport { useQuery, useMutation, useQueryClient } from '@tanstack/react-query';\nimport { hotelConfigService } from '../../services/hotelConfigService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// Create a context for the selected hotel configuration\nexport const HotelConfigContext = /*#__PURE__*/React.createContext({\n  selectedConfigId: '',\n  setSelectedConfigId: () => {},\n  currentConfig: undefined\n});\nconst drawerWidth = 240;\nconst menuItems = [{\n  text: 'Dashboard',\n  icon: /*#__PURE__*/_jsxDEV(DashboardIcon, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 30\n  }, this),\n  path: '/'\n}, {\n  text: 'Communications',\n  icon: /*#__PURE__*/_jsxDEV(MessageIcon, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 35\n  }, this),\n  path: '/communications'\n}, {\n  text: 'Room Management',\n  icon: /*#__PURE__*/_jsxDEV(HotelIcon, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 36\n  }, this),\n  path: '/rooms'\n}, {\n  text: 'Hotel Configuration',\n  icon: /*#__PURE__*/_jsxDEV(BusinessIcon, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 40\n  }, this),\n  path: '/hotel-config'\n}, {\n  text: 'Subscriptions',\n  icon: /*#__PURE__*/_jsxDEV(CreditCardIcon, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 34\n  }, this),\n  path: '/subscriptions'\n}, {\n  text: 'Settings',\n  icon: /*#__PURE__*/_jsxDEV(SettingsIcon, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 29\n  }, this),\n  path: '/settings'\n}, {\n  text: 'Analytics',\n  icon: /*#__PURE__*/_jsxDEV(BarChartIcon, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 30\n  }, this),\n  path: '/analytics'\n}];\nconst Layout = ({\n  children\n}) => {\n  _s();\n  var _hotelConfigs$;\n  const [mobileOpen, setMobileOpen] = useState(false);\n  const theme = useTheme();\n  const navigate = useNavigate();\n  const location = useLocation();\n  const queryClient = useQueryClient();\n  const [selectedConfigId, setSelectedConfigId] = useState('');\n\n  // Fetch all hotel configurations\n  const {\n    data: hotelConfigs = [],\n    isLoading: configsLoading\n  } = useQuery({\n    queryKey: ['hotelConfigs'],\n    queryFn: hotelConfigService.getAllConfigs\n  });\n\n  // Fetch current hotel configuration\n  const {\n    data: currentConfig,\n    refetch: refetchCurrentConfig,\n    isLoading: currentConfigLoading\n  } = useQuery({\n    queryKey: ['hotelConfig', selectedConfigId],\n    queryFn: () => hotelConfigService.getCurrentConfig()\n  });\n\n  // Set current configuration mutation\n  const setCurrentConfigMutation = useMutation({\n    mutationFn: configId => hotelConfigService.setCurrentConfig(configId),\n    onSuccess: () => {\n      queryClient.invalidateQueries({\n        queryKey: ['hotelConfig']\n      });\n    }\n  });\n  const handleDrawerToggle = () => {\n    setMobileOpen(!mobileOpen);\n  };\n  const handleConfigChange = event => {\n    const newConfigId = event.target.value;\n    setSelectedConfigId(newConfigId);\n    hotelConfigService.setCurrentConfig(newConfigId).then(() => {\n      refetchCurrentConfig();\n    });\n  };\n  useEffect(() => {\n    if (hotelConfigs && hotelConfigs.length > 0 && (!selectedConfigId || !hotelConfigs.some(cfg => cfg.id === selectedConfigId))) {\n      setSelectedConfigId(hotelConfigs[0].id);\n      hotelConfigService.setCurrentConfig(hotelConfigs[0].id).then(() => {\n        refetchCurrentConfig();\n      });\n    }\n  }, [selectedConfigId, hotelConfigs, refetchCurrentConfig]);\n  const drawer = /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Toolbar, {\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        noWrap: true,\n        component: \"div\",\n        children: \"Hotel AI\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(List, {\n      children: menuItems.map(item => /*#__PURE__*/_jsxDEV(ListItem, {\n        button: true,\n        onClick: () => {\n          navigate(item.path);\n          setMobileOpen(false);\n        },\n        selected: location.pathname === item.path,\n        sx: {\n          '&.Mui-selected': {\n            backgroundColor: theme.palette.primary.light,\n            '&:hover': {\n              backgroundColor: theme.palette.primary.light\n            }\n          }\n        },\n        children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n          sx: {\n            color: location.pathname === item.path ? theme.palette.primary.main : 'inherit'\n          },\n          children: item.icon\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n          primary: item.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 13\n        }, this)]\n      }, item.text, true, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 118,\n    columnNumber: 5\n  }, this);\n  return /*#__PURE__*/_jsxDEV(HotelConfigContext.Provider, {\n    value: {\n      selectedConfigId,\n      setSelectedConfigId,\n      currentConfig\n    },\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex'\n      },\n      children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AppBar, {\n        position: \"fixed\",\n        sx: {\n          width: {\n            sm: `calc(100% - ${drawerWidth}px)`\n          },\n          ml: {\n            sm: `${drawerWidth}px`\n          }\n        },\n        children: /*#__PURE__*/_jsxDEV(Toolbar, {\n          children: [/*#__PURE__*/_jsxDEV(IconButton, {\n            color: \"inherit\",\n            \"aria-label\": \"open drawer\",\n            edge: \"start\",\n            onClick: handleDrawerToggle,\n            sx: {\n              mr: 2,\n              display: {\n                sm: 'none'\n              }\n            },\n            children: /*#__PURE__*/_jsxDEV(MenuIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            noWrap: true,\n            component: \"div\",\n            sx: {\n              flexGrow: 1\n            },\n            children: \"Hotel AI\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 13\n          }, this), !configsLoading && !currentConfigLoading && hotelConfigs && hotelConfigs.length > 0 && /*#__PURE__*/_jsxDEV(FormControl, {\n            sx: {\n              minWidth: 200,\n              ml: 2\n            },\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              children: \"Hotel Configuration\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              value: selectedConfigId || ((_hotelConfigs$ = hotelConfigs[0]) === null || _hotelConfigs$ === void 0 ? void 0 : _hotelConfigs$.id) || '',\n              onChange: handleConfigChange,\n              label: \"Hotel Configuration\",\n              size: \"small\",\n              children: hotelConfigs.map(config => /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: config.id,\n                children: config.name\n              }, config.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 191,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        component: \"nav\",\n        sx: {\n          width: {\n            sm: drawerWidth\n          },\n          flexShrink: {\n            sm: 0\n          }\n        },\n        children: [/*#__PURE__*/_jsxDEV(Drawer, {\n          variant: \"temporary\",\n          open: mobileOpen,\n          onClose: handleDrawerToggle,\n          ModalProps: {\n            keepMounted: true // Better open performance on mobile.\n          },\n          sx: {\n            display: {\n              xs: 'block',\n              sm: 'none'\n            },\n            '& .MuiDrawer-paper': {\n              boxSizing: 'border-box',\n              width: drawerWidth\n            }\n          },\n          children: drawer\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Drawer, {\n          variant: \"permanent\",\n          sx: {\n            display: {\n              xs: 'none',\n              sm: 'block'\n            },\n            '& .MuiDrawer-paper': {\n              boxSizing: 'border-box',\n              width: drawerWidth\n            }\n          },\n          open: true,\n          children: drawer\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        component: \"main\",\n        sx: {\n          flexGrow: 1,\n          p: 3,\n          width: {\n            sm: `calc(100% - ${drawerWidth}px)`\n          },\n          minHeight: '100vh',\n          backgroundColor: theme.palette.background.default\n        },\n        children: [/*#__PURE__*/_jsxDEV(Toolbar, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 11\n        }, this), children]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 158,\n    columnNumber: 5\n  }, this);\n};\n_s(Layout, \"C5RZYHrV3S6jU4XB2sl2DCQKPgQ=\", false, function () {\n  return [useTheme, useNavigate, useLocation, useQueryClient, useQuery, useQuery, useMutation];\n});\n_c = Layout;\nexport default Layout;\nvar _c;\n$RefreshReg$(_c, \"Layout\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","useLocation","AppBar","Box","CssBaseline","Drawer","IconButton","List","ListItem","ListItemIcon","ListItemText","Toolbar","Typography","useTheme","FormControl","InputLabel","Select","MenuItem","Menu","MenuIcon","Dashboard","DashboardIcon","Message","MessageIcon","Hotel","HotelIcon","CreditCard","CreditCardIcon","Settings","SettingsIcon","BarChart","BarChartIcon","Business","BusinessIcon","useQuery","useMutation","useQueryClient","hotelConfigService","jsxDEV","_jsxDEV","HotelConfigContext","createContext","selectedConfigId","setSelectedConfigId","currentConfig","undefined","drawerWidth","menuItems","text","icon","fileName","_jsxFileName","lineNumber","columnNumber","path","Layout","children","_s","_hotelConfigs$","mobileOpen","setMobileOpen","theme","navigate","location","queryClient","data","hotelConfigs","isLoading","configsLoading","queryKey","queryFn","getAllConfigs","refetch","refetchCurrentConfig","currentConfigLoading","getCurrentConfig","setCurrentConfigMutation","mutationFn","configId","setCurrentConfig","onSuccess","invalidateQueries","handleDrawerToggle","handleConfigChange","event","newConfigId","target","value","then","length","some","cfg","id","drawer","variant","noWrap","component","map","item","button","onClick","selected","pathname","sx","backgroundColor","palette","primary","light","color","main","Provider","display","position","width","sm","ml","edge","mr","flexGrow","minWidth","onChange","label","size","config","name","flexShrink","open","onClose","ModalProps","keepMounted","xs","boxSizing","p","minHeight","background","default","_c","$RefreshReg$"],"sources":["C:/Users/CLIZARDE/2024/ProyectosPersonales/aiFront-Desk/frontend/src/components/Layout/Layout.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useNavigate, useLocation } from 'react-router-dom';\r\nimport {\r\n  AppBar,\r\n  Box,\r\n  CssBaseline,\r\n  Drawer,\r\n  IconButton,\r\n  List,\r\n  ListItem,\r\n  ListItemIcon,\r\n  ListItemText,\r\n  Toolbar,\r\n  Typography,\r\n  useTheme,\r\n  FormControl,\r\n  InputLabel,\r\n  Select,\r\n  MenuItem,\r\n  SelectChangeEvent,\r\n} from '@mui/material';\r\nimport {\r\n  Menu as MenuIcon,\r\n  Dashboard as DashboardIcon,\r\n  Message as MessageIcon,\r\n  Hotel as HotelIcon,\r\n  CreditCard as CreditCardIcon,\r\n  Settings as SettingsIcon,\r\n  BarChart as BarChartIcon,\r\n  Business as BusinessIcon,\r\n} from '@mui/icons-material';\r\nimport { useQuery, useMutation, useQueryClient } from '@tanstack/react-query';\r\nimport { hotelConfigService } from '../../services/hotelConfigService';\r\nimport type { HotelConfiguration } from '../../types/hotel';\r\n\r\n// Create a context for the selected hotel configuration\r\nexport const HotelConfigContext = React.createContext<{\r\n  selectedConfigId: string;\r\n  setSelectedConfigId: (id: string) => void;\r\n  currentConfig: HotelConfiguration | undefined;\r\n}>(\r\n  {\r\n    selectedConfigId: '',\r\n    setSelectedConfigId: () => {},\r\n    currentConfig: undefined,\r\n  }\r\n);\r\n\r\nconst drawerWidth = 240;\r\n\r\ninterface LayoutProps {\r\n  children: React.ReactNode;\r\n}\r\n\r\nconst menuItems = [\r\n  { text: 'Dashboard', icon: <DashboardIcon />, path: '/' },\r\n  { text: 'Communications', icon: <MessageIcon />, path: '/communications' },\r\n  { text: 'Room Management', icon: <HotelIcon />, path: '/rooms' },\r\n  { text: 'Hotel Configuration', icon: <BusinessIcon />, path: '/hotel-config' },\r\n  { text: 'Subscriptions', icon: <CreditCardIcon />, path: '/subscriptions' },\r\n  { text: 'Settings', icon: <SettingsIcon />, path: '/settings' },\r\n  { text: 'Analytics', icon: <BarChartIcon />, path: '/analytics' },\r\n];\r\n\r\nconst Layout: React.FC<LayoutProps> = ({ children }) => {\r\n  const [mobileOpen, setMobileOpen] = useState(false);\r\n  const theme = useTheme();\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n  const queryClient = useQueryClient();\r\n  const [selectedConfigId, setSelectedConfigId] = useState<string>('');\r\n\r\n  // Fetch all hotel configurations\r\n  const { data: hotelConfigs = [], isLoading: configsLoading } = useQuery({\r\n    queryKey: ['hotelConfigs'],\r\n    queryFn: hotelConfigService.getAllConfigs,\r\n  });\r\n\r\n  // Fetch current hotel configuration\r\n  const { data: currentConfig, refetch: refetchCurrentConfig, isLoading: currentConfigLoading } = useQuery({\r\n    queryKey: ['hotelConfig', selectedConfigId],\r\n    queryFn: () => hotelConfigService.getCurrentConfig(),\r\n  });\r\n\r\n  // Set current configuration mutation\r\n  const setCurrentConfigMutation = useMutation({\r\n    mutationFn: (configId: string) => hotelConfigService.setCurrentConfig(configId),\r\n    onSuccess: () => {\r\n      queryClient.invalidateQueries({ queryKey: ['hotelConfig'] });\r\n    },\r\n  });\r\n\r\n  const handleDrawerToggle = () => {\r\n    setMobileOpen(!mobileOpen);\r\n  };\r\n\r\n  const handleConfigChange = (event: SelectChangeEvent<string>) => {\r\n    const newConfigId = event.target.value;\r\n    setSelectedConfigId(newConfigId);\r\n    hotelConfigService.setCurrentConfig(newConfigId).then(() => {\r\n      refetchCurrentConfig();\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (\r\n      hotelConfigs && hotelConfigs.length > 0 &&\r\n      (!selectedConfigId || !hotelConfigs.some(cfg => cfg.id === selectedConfigId))\r\n    ) {\r\n      setSelectedConfigId(hotelConfigs[0].id);\r\n      hotelConfigService.setCurrentConfig(hotelConfigs[0].id).then(() => {\r\n        refetchCurrentConfig();\r\n      });\r\n    }\r\n  }, [selectedConfigId, hotelConfigs, refetchCurrentConfig]);\r\n\r\n  const drawer = (\r\n    <div>\r\n      <Toolbar>\r\n        <Typography variant=\"h6\" noWrap component=\"div\">\r\n          Hotel AI\r\n        </Typography>\r\n      </Toolbar>\r\n      <List>\r\n        {menuItems.map((item) => (\r\n          <ListItem\r\n            button\r\n            key={item.text}\r\n            onClick={() => {\r\n              navigate(item.path);\r\n              setMobileOpen(false);\r\n            }}\r\n            selected={location.pathname === item.path}\r\n            sx={{\r\n              '&.Mui-selected': {\r\n                backgroundColor: theme.palette.primary.light,\r\n                '&:hover': {\r\n                  backgroundColor: theme.palette.primary.light,\r\n                },\r\n              },\r\n            }}\r\n          >\r\n            <ListItemIcon\r\n              sx={{\r\n                color: location.pathname === item.path ? theme.palette.primary.main : 'inherit',\r\n              }}\r\n            >\r\n              {item.icon}\r\n            </ListItemIcon>\r\n            <ListItemText primary={item.text} />\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <HotelConfigContext.Provider value={{ selectedConfigId, setSelectedConfigId, currentConfig }}>\r\n      <Box sx={{ display: 'flex' }}>\r\n        <CssBaseline />\r\n        <AppBar\r\n          position=\"fixed\"\r\n          sx={{\r\n            width: { sm: `calc(100% - ${drawerWidth}px)` },\r\n            ml: { sm: `${drawerWidth}px` },\r\n          }}\r\n        >\r\n          <Toolbar>\r\n            <IconButton\r\n              color=\"inherit\"\r\n              aria-label=\"open drawer\"\r\n              edge=\"start\"\r\n              onClick={handleDrawerToggle}\r\n              sx={{ mr: 2, display: { sm: 'none' } }}\r\n            >\r\n              <MenuIcon />\r\n            </IconButton>\r\n            <Typography variant=\"h6\" noWrap component=\"div\" sx={{ flexGrow: 1 }}>\r\n              Hotel AI\r\n            </Typography>\r\n            {!configsLoading && !currentConfigLoading && hotelConfigs && hotelConfigs.length > 0 && (\r\n              <FormControl sx={{ minWidth: 200, ml: 2 }}>\r\n                <InputLabel>Hotel Configuration</InputLabel>\r\n                <Select<string>\r\n                  value={selectedConfigId || hotelConfigs[0]?.id || ''}\r\n                  onChange={handleConfigChange}\r\n                  label=\"Hotel Configuration\"\r\n                  size=\"small\"\r\n                >\r\n                  {hotelConfigs.map((config) => (\r\n                    <MenuItem key={config.id} value={config.id}>\r\n                      {config.name}\r\n                    </MenuItem>\r\n                  ))}\r\n                </Select>\r\n              </FormControl>\r\n            )}\r\n          </Toolbar>\r\n        </AppBar>\r\n        <Box\r\n          component=\"nav\"\r\n          sx={{ width: { sm: drawerWidth }, flexShrink: { sm: 0 } }}\r\n        >\r\n          <Drawer\r\n            variant=\"temporary\"\r\n            open={mobileOpen}\r\n            onClose={handleDrawerToggle}\r\n            ModalProps={{\r\n              keepMounted: true, // Better open performance on mobile.\r\n            }}\r\n            sx={{\r\n              display: { xs: 'block', sm: 'none' },\r\n              '& .MuiDrawer-paper': {\r\n                boxSizing: 'border-box',\r\n                width: drawerWidth,\r\n              },\r\n            }}\r\n          >\r\n            {drawer}\r\n          </Drawer>\r\n          <Drawer\r\n            variant=\"permanent\"\r\n            sx={{\r\n              display: { xs: 'none', sm: 'block' },\r\n              '& .MuiDrawer-paper': {\r\n                boxSizing: 'border-box',\r\n                width: drawerWidth,\r\n              },\r\n            }}\r\n            open\r\n          >\r\n            {drawer}\r\n          </Drawer>\r\n        </Box>\r\n        <Box\r\n          component=\"main\"\r\n          sx={{\r\n            flexGrow: 1,\r\n            p: 3,\r\n            width: { sm: `calc(100% - ${drawerWidth}px)` },\r\n            minHeight: '100vh',\r\n            backgroundColor: theme.palette.background.default,\r\n          }}\r\n        >\r\n          <Toolbar />\r\n          {children}\r\n        </Box>\r\n      </Box>\r\n    </HotelConfigContext.Provider>\r\n  );\r\n};\r\n\r\nexport default Layout; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}