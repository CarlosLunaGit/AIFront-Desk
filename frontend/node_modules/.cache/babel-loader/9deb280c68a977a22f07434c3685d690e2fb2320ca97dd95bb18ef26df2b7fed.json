{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\CLIZARDE\\\\2024\\\\ProyectosPersonales\\\\aiFront-Desk\\\\frontend\\\\src\\\\components\\\\Rooms\\\\RoomManagement.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Box, Grid, Paper, Typography, Card, CardContent, CardActions, Button, Chip, IconButton, Dialog, DialogTitle, DialogContent, DialogActions, TextField, FormControl, InputLabel, Select, MenuItem, Alert, CircularProgress } from '@mui/material';\nimport { Edit as EditIcon, Add as AddIcon, Hotel as HotelIcon, Wifi as WifiIcon, LocalBar as MinibarIcon, Balcony as BalconyIcon, Visibility as ViewIcon } from '@mui/icons-material';\nimport { useQuery, useQueryClient } from '@tanstack/react-query';\nimport { hotelConfigService } from '../../services/hotelConfigService';\nimport RoomFilters from './RoomFilters';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst RoomManagement = () => {\n  _s();\n  var _getRoomTypeInfo, _getFloorInfo;\n  const queryClient = useQueryClient();\n  const [selectedRoom, setSelectedRoom] = useState(null);\n  const [filter, setFilter] = useState({\n    status: [],\n    type: [],\n    floor: [],\n    features: []\n  });\n  const [showRoomDialog, setShowRoomDialog] = useState(false);\n  const [dialogMode, setDialogMode] = useState('view');\n\n  // Fetch hotel configuration\n  const {\n    data: hotelConfig,\n    isLoading\n  } = useQuery({\n    queryKey: ['hotelConfig'],\n    queryFn: hotelConfigService.getCurrentConfig\n  });\n\n  // Mock rooms data (this would come from an API in a real application)\n  const [rooms, setRooms] = useState([]);\n  useEffect(() => {\n    if (hotelConfig) {\n      // Convert room templates to rooms with mock statuses\n      const mockRooms = hotelConfig.roomTemplates.map(template => ({\n        id: template.id,\n        template,\n        status: 'available',\n        notes: template.notes\n      }));\n      setRooms(mockRooms);\n    }\n  }, [hotelConfig]);\n  const handleFilterChange = newFilter => {\n    setFilter(prev => ({\n      ...prev,\n      ...newFilter\n    }));\n  };\n  const handleRoomClick = room => {\n    setSelectedRoom(room);\n    setDialogMode('view');\n    setShowRoomDialog(true);\n  };\n  const handleEditRoom = room => {\n    setSelectedRoom(room);\n    setDialogMode('edit');\n    setShowRoomDialog(true);\n  };\n  const handleCloseDialog = () => {\n    setShowRoomDialog(false);\n    setSelectedRoom(null);\n  };\n  const handleStatusChange = (roomId, newStatus) => {\n    setRooms(prev => prev.map(room => room.id === roomId ? {\n      ...room,\n      status: newStatus\n    } : room));\n  };\n  const getRoomTypeInfo = typeId => {\n    return hotelConfig === null || hotelConfig === void 0 ? void 0 : hotelConfig.roomTypes.find(rt => rt.id === typeId);\n  };\n  const getFloorInfo = floorId => {\n    return hotelConfig === null || hotelConfig === void 0 ? void 0 : hotelConfig.floors.find(f => f.id === floorId);\n  };\n  const getFeatureInfo = featureId => {\n    return hotelConfig === null || hotelConfig === void 0 ? void 0 : hotelConfig.features.find(f => f.id === featureId);\n  };\n  const getStatusColor = status => {\n    switch (status) {\n      case 'available':\n        return 'success';\n      case 'occupied':\n        return 'error';\n      case 'maintenance':\n        return 'warning';\n      case 'cleaning':\n        return 'info';\n      case 'reserved':\n        return 'secondary';\n      default:\n        return 'default';\n    }\n  };\n  const filteredRooms = rooms.filter(room => {\n    var _filter$status, _filter$type, _filter$floor, _filter$features;\n    const template = room.template;\n    const roomType = getRoomTypeInfo(template.typeId);\n    const floor = getFloorInfo(template.floorId);\n    return (!((_filter$status = filter.status) !== null && _filter$status !== void 0 && _filter$status.length) || filter.status.includes(room.status)) && (!((_filter$type = filter.type) !== null && _filter$type !== void 0 && _filter$type.length) || roomType && filter.type.includes(roomType.name)) && (!((_filter$floor = filter.floor) !== null && _filter$floor !== void 0 && _filter$floor.length) || floor && filter.floor.includes(floor.number)) && (!filter.minCapacity || template.capacity >= filter.minCapacity) && (!filter.maxRate || template.rate <= filter.maxRate) && (!((_filter$features = filter.features) !== null && _filter$features !== void 0 && _filter$features.length) || filter.features.every(f => template.features.includes(f)));\n  });\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      minHeight: \"80vh\",\n      children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }, this);\n  }\n  if (!hotelConfig) {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      p: 3,\n      children: /*#__PURE__*/_jsxDEV(Alert, {\n        severity: \"warning\",\n        children: \"Hotel configuration not found. Please configure your hotel first.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Box, {\n    p: 3,\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 3,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          display: \"flex\",\n          justifyContent: \"space-between\",\n          alignItems: \"center\",\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h4\",\n            children: \"Room Management\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            startIcon: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 26\n            }, this),\n            onClick: () => {\n              // TODO: Implement add room functionality\n            },\n            children: \"Add Room\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(Paper, {\n          sx: {\n            p: 2\n          },\n          children: /*#__PURE__*/_jsxDEV(RoomFilters, {\n            filter: filter,\n            onFilterChange: handleFilterChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 2,\n          children: filteredRooms.map(room => {\n            const roomType = getRoomTypeInfo(room.template.typeId);\n            const floor = getFloorInfo(room.template.floorId);\n            return /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              sm: 6,\n              md: 4,\n              lg: 3,\n              children: /*#__PURE__*/_jsxDEV(Card, {\n                sx: {\n                  height: '100%',\n                  display: 'flex',\n                  flexDirection: 'column',\n                  cursor: 'pointer',\n                  '&:hover': {\n                    boxShadow: 6\n                  }\n                },\n                onClick: () => handleRoomClick(room),\n                children: [/*#__PURE__*/_jsxDEV(CardContent, {\n                  sx: {\n                    flexGrow: 1\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(Box, {\n                    display: \"flex\",\n                    justifyContent: \"space-between\",\n                    alignItems: \"center\",\n                    mb: 1,\n                    children: [/*#__PURE__*/_jsxDEV(Typography, {\n                      variant: \"h6\",\n                      component: \"div\",\n                      children: room.template.name\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 229,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(Chip, {\n                      label: room.status,\n                      color: getStatusColor(room.status),\n                      size: \"small\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 232,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 228,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                    color: \"text.secondary\",\n                    gutterBottom: true,\n                    children: [roomType === null || roomType === void 0 ? void 0 : roomType.name, \" \\u2022 Floor \", floor === null || floor === void 0 ? void 0 : floor.number]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 239,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"body2\",\n                    color: \"text.secondary\",\n                    gutterBottom: true,\n                    children: [\"Capacity: \", room.template.capacity, \" \\u2022 Rate: $\", room.template.rate, \"/night\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 243,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Box, {\n                    display: \"flex\",\n                    gap: 1,\n                    mt: 1,\n                    flexWrap: \"wrap\",\n                    children: room.template.features.map(featureId => {\n                      const feature = getFeatureInfo(featureId);\n                      if (!feature) return null;\n                      let icon = /*#__PURE__*/_jsxDEV(HotelIcon, {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 252,\n                        columnNumber: 38\n                      }, this);\n                      switch (feature.icon) {\n                        case 'wifi':\n                          icon = /*#__PURE__*/_jsxDEV(WifiIcon, {}, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 255,\n                            columnNumber: 38\n                          }, this);\n                          break;\n                        case 'local_bar':\n                          icon = /*#__PURE__*/_jsxDEV(MinibarIcon, {}, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 258,\n                            columnNumber: 38\n                          }, this);\n                          break;\n                        case 'balcony':\n                          icon = /*#__PURE__*/_jsxDEV(BalconyIcon, {}, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 261,\n                            columnNumber: 38\n                          }, this);\n                          break;\n                        case 'visibility':\n                          icon = /*#__PURE__*/_jsxDEV(ViewIcon, {}, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 264,\n                            columnNumber: 38\n                          }, this);\n                          break;\n                      }\n                      return /*#__PURE__*/_jsxDEV(Chip, {\n                        icon: icon,\n                        label: feature.name,\n                        size: \"small\",\n                        variant: \"outlined\"\n                      }, featureId, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 269,\n                        columnNumber: 29\n                      }, this);\n                    })\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 247,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 227,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n                  children: /*#__PURE__*/_jsxDEV(IconButton, {\n                    size: \"small\",\n                    onClick: e => {\n                      e.stopPropagation();\n                      handleEditRoom(room);\n                    },\n                    children: /*#__PURE__*/_jsxDEV(EditIcon, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 289,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 282,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 281,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 215,\n                columnNumber: 19\n              }, this)\n            }, room.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 214,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: showRoomDialog,\n      onClose: handleCloseDialog,\n      maxWidth: \"sm\",\n      fullWidth: true,\n      children: selectedRoom && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n          children: dialogMode === 'edit' ? 'Edit Room' : 'Room Details'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n          children: dialogMode === 'edit' ? /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              pt: 2\n            },\n            children: [/*#__PURE__*/_jsxDEV(FormControl, {\n              fullWidth: true,\n              sx: {\n                mb: 2\n              },\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                children: \"Status\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 316,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Select, {\n                value: selectedRoom.status,\n                onChange: e => handleStatusChange(selectedRoom.id, e.target.value),\n                label: \"Status\",\n                children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: \"available\",\n                  children: \"Available\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 324,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: \"occupied\",\n                  children: \"Occupied\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 325,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: \"maintenance\",\n                  children: \"Maintenance\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 326,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: \"cleaning\",\n                  children: \"Cleaning\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 327,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: \"reserved\",\n                  children: \"Reserved\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 328,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 317,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 315,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              fullWidth: true,\n              multiline: true,\n              rows: 4,\n              label: \"Notes\",\n              value: selectedRoom.notes || '',\n              onChange: e => setSelectedRoom(prev => prev ? {\n                ...prev,\n                notes: e.target.value\n              } : null)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 332,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 314,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              pt: 2\n            },\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              gutterBottom: true,\n              children: selectedRoom.template.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 347,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              color: \"text.secondary\",\n              gutterBottom: true,\n              children: [(_getRoomTypeInfo = getRoomTypeInfo(selectedRoom.template.typeId)) === null || _getRoomTypeInfo === void 0 ? void 0 : _getRoomTypeInfo.name, \" \\u2022 Floor\", ' ', (_getFloorInfo = getFloorInfo(selectedRoom.template.floorId)) === null || _getFloorInfo === void 0 ? void 0 : _getFloorInfo.number]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 350,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              gutterBottom: true,\n              children: [\"Capacity: \", selectedRoom.template.capacity, \" \\u2022 Rate: $\", selectedRoom.template.rate, \"/night\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 354,\n              columnNumber: 19\n            }, this), selectedRoom.notes && /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              color: \"text.secondary\",\n              sx: {\n                mt: 2\n              },\n              children: [\"Notes: \", selectedRoom.notes]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 359,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 346,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n          children: dialogMode === 'edit' ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              onClick: handleCloseDialog,\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 369,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              onClick: () => {\n                // TODO: Implement save functionality\n                handleCloseDialog();\n              },\n              children: \"Save Changes\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 370,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              onClick: handleCloseDialog,\n              children: \"Close\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 382,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              onClick: () => setDialogMode('edit'),\n              children: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 383,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 366,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 181,\n    columnNumber: 5\n  }, this);\n};\n_s(RoomManagement, \"6pPmCj6akT/Ig7G2VjoCYOsPb40=\", false, function () {\n  return [useQueryClient, useQuery];\n});\n_c = RoomManagement;\nexport default RoomManagement;\nvar _c;\n$RefreshReg$(_c, \"RoomManagement\");","map":{"version":3,"names":["React","useState","useEffect","Box","Grid","Paper","Typography","Card","CardContent","CardActions","Button","Chip","IconButton","Dialog","DialogTitle","DialogContent","DialogActions","TextField","FormControl","InputLabel","Select","MenuItem","Alert","CircularProgress","Edit","EditIcon","Add","AddIcon","Hotel","HotelIcon","Wifi","WifiIcon","LocalBar","MinibarIcon","Balcony","BalconyIcon","Visibility","ViewIcon","useQuery","useQueryClient","hotelConfigService","RoomFilters","jsxDEV","_jsxDEV","Fragment","_Fragment","RoomManagement","_s","_getRoomTypeInfo","_getFloorInfo","queryClient","selectedRoom","setSelectedRoom","filter","setFilter","status","type","floor","features","showRoomDialog","setShowRoomDialog","dialogMode","setDialogMode","data","hotelConfig","isLoading","queryKey","queryFn","getCurrentConfig","rooms","setRooms","mockRooms","roomTemplates","map","template","id","notes","handleFilterChange","newFilter","prev","handleRoomClick","room","handleEditRoom","handleCloseDialog","handleStatusChange","roomId","newStatus","getRoomTypeInfo","typeId","roomTypes","find","rt","getFloorInfo","floorId","floors","f","getFeatureInfo","featureId","getStatusColor","filteredRooms","_filter$status","_filter$type","_filter$floor","_filter$features","roomType","length","includes","name","number","minCapacity","capacity","maxRate","rate","every","display","justifyContent","alignItems","minHeight","children","fileName","_jsxFileName","lineNumber","columnNumber","p","severity","container","spacing","item","xs","variant","startIcon","onClick","sx","onFilterChange","sm","md","lg","height","flexDirection","cursor","boxShadow","flexGrow","mb","component","label","color","size","gutterBottom","gap","mt","flexWrap","feature","icon","e","stopPropagation","open","onClose","maxWidth","fullWidth","pt","value","onChange","target","multiline","rows","_c","$RefreshReg$"],"sources":["C:/Users/CLIZARDE/2024/ProyectosPersonales/aiFront-Desk/frontend/src/components/Rooms/RoomManagement.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport {\r\n  Box,\r\n  Grid,\r\n  Paper,\r\n  Typography,\r\n  Card,\r\n  CardContent,\r\n  CardActions,\r\n  Button,\r\n  Chip,\r\n  IconButton,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  TextField,\r\n  FormControl,\r\n  InputLabel,\r\n  Select,\r\n  MenuItem,\r\n  Alert,\r\n  CircularProgress,\r\n} from '@mui/material';\r\nimport {\r\n  Edit as EditIcon,\r\n  Delete as DeleteIcon,\r\n  Add as AddIcon,\r\n  Hotel as HotelIcon,\r\n  Wifi as WifiIcon,\r\n  LocalBar as MinibarIcon,\r\n  Balcony as BalconyIcon,\r\n  Visibility as ViewIcon,\r\n} from '@mui/icons-material';\r\nimport { useQuery, useMutation, useQueryClient } from '@tanstack/react-query';\r\nimport { hotelConfigService } from '../../services/hotelConfigService';\r\nimport type { RoomTemplate, RoomType, Floor, HotelFeature } from '../../types/hotel';\r\nimport { RoomStatus, RoomFilter } from '../../types/room';\r\nimport RoomFilters from './RoomFilters';\r\n\r\ninterface Room {\r\n  id: string;\r\n  template: RoomTemplate;\r\n  status: RoomStatus;\r\n  currentGuest?: {\r\n    id: string;\r\n    name: string;\r\n    checkIn: string;\r\n    checkOut: string;\r\n  };\r\n  notes?: string;\r\n}\r\n\r\nconst RoomManagement: React.FC = () => {\r\n  const queryClient = useQueryClient();\r\n  const [selectedRoom, setSelectedRoom] = useState<Room | null>(null);\r\n  const [filter, setFilter] = useState<RoomFilter>({\r\n    status: [],\r\n    type: [],\r\n    floor: [],\r\n    features: [],\r\n  });\r\n  const [showRoomDialog, setShowRoomDialog] = useState(false);\r\n  const [dialogMode, setDialogMode] = useState<'edit' | 'view'>('view');\r\n\r\n  // Fetch hotel configuration\r\n  const { data: hotelConfig, isLoading } = useQuery({\r\n    queryKey: ['hotelConfig'],\r\n    queryFn: hotelConfigService.getCurrentConfig,\r\n  });\r\n\r\n  // Mock rooms data (this would come from an API in a real application)\r\n  const [rooms, setRooms] = useState<Room[]>([]);\r\n\r\n  useEffect(() => {\r\n    if (hotelConfig) {\r\n      // Convert room templates to rooms with mock statuses\r\n      const mockRooms: Room[] = hotelConfig.roomTemplates.map((template) => ({\r\n        id: template.id,\r\n        template,\r\n        status: 'available' as RoomStatus,\r\n        notes: template.notes,\r\n      }));\r\n      setRooms(mockRooms);\r\n    }\r\n  }, [hotelConfig]);\r\n\r\n  const handleFilterChange = (newFilter: Partial<RoomFilter>) => {\r\n    setFilter((prev) => ({ ...prev, ...newFilter }));\r\n  };\r\n\r\n  const handleRoomClick = (room: Room) => {\r\n    setSelectedRoom(room);\r\n    setDialogMode('view');\r\n    setShowRoomDialog(true);\r\n  };\r\n\r\n  const handleEditRoom = (room: Room) => {\r\n    setSelectedRoom(room);\r\n    setDialogMode('edit');\r\n    setShowRoomDialog(true);\r\n  };\r\n\r\n  const handleCloseDialog = () => {\r\n    setShowRoomDialog(false);\r\n    setSelectedRoom(null);\r\n  };\r\n\r\n  const handleStatusChange = (roomId: string, newStatus: RoomStatus) => {\r\n    setRooms((prev) =>\r\n      prev.map((room) =>\r\n        room.id === roomId ? { ...room, status: newStatus } : room\r\n      )\r\n    );\r\n  };\r\n\r\n  const getRoomTypeInfo = (typeId: string) => {\r\n    return hotelConfig?.roomTypes.find((rt) => rt.id === typeId);\r\n  };\r\n\r\n  const getFloorInfo = (floorId: string) => {\r\n    return hotelConfig?.floors.find((f) => f.id === floorId);\r\n  };\r\n\r\n  const getFeatureInfo = (featureId: string) => {\r\n    return hotelConfig?.features.find((f) => f.id === featureId);\r\n  };\r\n\r\n  const getStatusColor = (status: RoomStatus) => {\r\n    switch (status) {\r\n      case 'available':\r\n        return 'success';\r\n      case 'occupied':\r\n        return 'error';\r\n      case 'maintenance':\r\n        return 'warning';\r\n      case 'cleaning':\r\n        return 'info';\r\n      case 'reserved':\r\n        return 'secondary';\r\n      default:\r\n        return 'default';\r\n    }\r\n  };\r\n\r\n  const filteredRooms = rooms.filter((room) => {\r\n    const template = room.template;\r\n    const roomType = getRoomTypeInfo(template.typeId);\r\n    const floor = getFloorInfo(template.floorId);\r\n\r\n    return (\r\n      (!filter.status?.length || filter.status.includes(room.status)) &&\r\n      (!filter.type?.length || (roomType && filter.type.includes(roomType.name as any))) &&\r\n      (!filter.floor?.length || (floor && filter.floor.includes(floor.number))) &&\r\n      (!filter.minCapacity || template.capacity >= filter.minCapacity) &&\r\n      (!filter.maxRate || template.rate <= filter.maxRate) &&\r\n      (!filter.features?.length ||\r\n        filter.features.every((f) => template.features.includes(f)))\r\n    );\r\n  });\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\" minHeight=\"80vh\">\r\n        <CircularProgress />\r\n      </Box>\r\n    );\r\n  }\r\n\r\n  if (!hotelConfig) {\r\n    return (\r\n      <Box p={3}>\r\n        <Alert severity=\"warning\">\r\n          Hotel configuration not found. Please configure your hotel first.\r\n        </Alert>\r\n      </Box>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Box p={3}>\r\n      <Grid container spacing={3}>\r\n        {/* Header */}\r\n        <Grid item xs={12}>\r\n          <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\r\n            <Typography variant=\"h4\">Room Management</Typography>\r\n            <Button\r\n              variant=\"contained\"\r\n              startIcon={<AddIcon />}\r\n              onClick={() => {\r\n                // TODO: Implement add room functionality\r\n              }}\r\n            >\r\n              Add Room\r\n            </Button>\r\n          </Box>\r\n        </Grid>\r\n\r\n        {/* Filters */}\r\n        <Grid item xs={12}>\r\n          <Paper sx={{ p: 2 }}>\r\n            <RoomFilters filter={filter} onFilterChange={handleFilterChange} />\r\n          </Paper>\r\n        </Grid>\r\n\r\n        {/* Room Grid */}\r\n        <Grid item xs={12}>\r\n          <Grid container spacing={2}>\r\n            {filteredRooms.map((room) => {\r\n              const roomType = getRoomTypeInfo(room.template.typeId);\r\n              const floor = getFloorInfo(room.template.floorId);\r\n\r\n              return (\r\n                <Grid item xs={12} sm={6} md={4} lg={3} key={room.id}>\r\n                  <Card\r\n                    sx={{\r\n                      height: '100%',\r\n                      display: 'flex',\r\n                      flexDirection: 'column',\r\n                      cursor: 'pointer',\r\n                      '&:hover': {\r\n                        boxShadow: 6,\r\n                      },\r\n                    }}\r\n                    onClick={() => handleRoomClick(room)}\r\n                  >\r\n                    <CardContent sx={{ flexGrow: 1 }}>\r\n                      <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\" mb={1}>\r\n                        <Typography variant=\"h6\" component=\"div\">\r\n                          {room.template.name}\r\n                        </Typography>\r\n                        <Chip\r\n                          label={room.status}\r\n                          color={getStatusColor(room.status)}\r\n                          size=\"small\"\r\n                        />\r\n                      </Box>\r\n\r\n                      <Typography color=\"text.secondary\" gutterBottom>\r\n                        {roomType?.name} • Floor {floor?.number}\r\n                      </Typography>\r\n\r\n                      <Typography variant=\"body2\" color=\"text.secondary\" gutterBottom>\r\n                        Capacity: {room.template.capacity} • Rate: ${room.template.rate}/night\r\n                      </Typography>\r\n\r\n                      <Box display=\"flex\" gap={1} mt={1} flexWrap=\"wrap\">\r\n                        {room.template.features.map((featureId) => {\r\n                          const feature = getFeatureInfo(featureId);\r\n                          if (!feature) return null;\r\n\r\n                          let icon = <HotelIcon />;\r\n                          switch (feature.icon) {\r\n                            case 'wifi':\r\n                              icon = <WifiIcon />;\r\n                              break;\r\n                            case 'local_bar':\r\n                              icon = <MinibarIcon />;\r\n                              break;\r\n                            case 'balcony':\r\n                              icon = <BalconyIcon />;\r\n                              break;\r\n                            case 'visibility':\r\n                              icon = <ViewIcon />;\r\n                              break;\r\n                          }\r\n\r\n                          return (\r\n                            <Chip\r\n                              key={featureId}\r\n                              icon={icon}\r\n                              label={feature.name}\r\n                              size=\"small\"\r\n                              variant=\"outlined\"\r\n                            />\r\n                          );\r\n                        })}\r\n                      </Box>\r\n                    </CardContent>\r\n\r\n                    <CardActions>\r\n                      <IconButton\r\n                        size=\"small\"\r\n                        onClick={(e) => {\r\n                          e.stopPropagation();\r\n                          handleEditRoom(room);\r\n                        }}\r\n                      >\r\n                        <EditIcon />\r\n                      </IconButton>\r\n                    </CardActions>\r\n                  </Card>\r\n                </Grid>\r\n              );\r\n            })}\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      {/* Room Dialog */}\r\n      <Dialog\r\n        open={showRoomDialog}\r\n        onClose={handleCloseDialog}\r\n        maxWidth=\"sm\"\r\n        fullWidth\r\n      >\r\n        {selectedRoom && (\r\n          <>\r\n            <DialogTitle>\r\n              {dialogMode === 'edit' ? 'Edit Room' : 'Room Details'}\r\n            </DialogTitle>\r\n            <DialogContent>\r\n              {dialogMode === 'edit' ? (\r\n                <Box sx={{ pt: 2 }}>\r\n                  <FormControl fullWidth sx={{ mb: 2 }}>\r\n                    <InputLabel>Status</InputLabel>\r\n                    <Select\r\n                      value={selectedRoom.status}\r\n                      onChange={(e) =>\r\n                        handleStatusChange(selectedRoom.id, e.target.value as RoomStatus)\r\n                      }\r\n                      label=\"Status\"\r\n                    >\r\n                      <MenuItem value=\"available\">Available</MenuItem>\r\n                      <MenuItem value=\"occupied\">Occupied</MenuItem>\r\n                      <MenuItem value=\"maintenance\">Maintenance</MenuItem>\r\n                      <MenuItem value=\"cleaning\">Cleaning</MenuItem>\r\n                      <MenuItem value=\"reserved\">Reserved</MenuItem>\r\n                    </Select>\r\n                  </FormControl>\r\n\r\n                  <TextField\r\n                    fullWidth\r\n                    multiline\r\n                    rows={4}\r\n                    label=\"Notes\"\r\n                    value={selectedRoom.notes || ''}\r\n                    onChange={(e) =>\r\n                      setSelectedRoom((prev) =>\r\n                        prev ? { ...prev, notes: e.target.value } : null\r\n                      )\r\n                    }\r\n                  />\r\n                </Box>\r\n              ) : (\r\n                <Box sx={{ pt: 2 }}>\r\n                  <Typography variant=\"h6\" gutterBottom>\r\n                    {selectedRoom.template.name}\r\n                  </Typography>\r\n                  <Typography color=\"text.secondary\" gutterBottom>\r\n                    {getRoomTypeInfo(selectedRoom.template.typeId)?.name} • Floor{' '}\r\n                    {getFloorInfo(selectedRoom.template.floorId)?.number}\r\n                  </Typography>\r\n                  <Typography variant=\"body2\" gutterBottom>\r\n                    Capacity: {selectedRoom.template.capacity} • Rate: $\r\n                    {selectedRoom.template.rate}/night\r\n                  </Typography>\r\n                  {selectedRoom.notes && (\r\n                    <Typography variant=\"body2\" color=\"text.secondary\" sx={{ mt: 2 }}>\r\n                      Notes: {selectedRoom.notes}\r\n                    </Typography>\r\n                  )}\r\n                </Box>\r\n              )}\r\n            </DialogContent>\r\n            <DialogActions>\r\n              {dialogMode === 'edit' ? (\r\n                <>\r\n                  <Button onClick={handleCloseDialog}>Cancel</Button>\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    onClick={() => {\r\n                      // TODO: Implement save functionality\r\n                      handleCloseDialog();\r\n                    }}\r\n                  >\r\n                    Save Changes\r\n                  </Button>\r\n                </>\r\n              ) : (\r\n                <>\r\n                  <Button onClick={handleCloseDialog}>Close</Button>\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    onClick={() => setDialogMode('edit')}\r\n                  >\r\n                    Edit\r\n                  </Button>\r\n                </>\r\n              )}\r\n            </DialogActions>\r\n          </>\r\n        )}\r\n      </Dialog>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default RoomManagement; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}