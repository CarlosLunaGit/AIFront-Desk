{"ast":null,"code":"import { api } from './api';\nconst BASE_URL = '/api/hotel/config';\nexport const hotelConfigService = {\n  // Get current hotel configuration\n  getCurrentConfig: async () => {\n    const response = await api.get(`${BASE_URL}/current`);\n    return response.data;\n  },\n  // Set current hotel configuration\n  setCurrentConfig: async configId => {\n    const response = await api.post(`${BASE_URL}/current`, {\n      configId\n    });\n    return response.data;\n  },\n  // Get all hotel configurations\n  getAllConfigs: async () => {\n    const response = await api.get(BASE_URL);\n    return response.data;\n  },\n  // Create new hotel configuration\n  createConfig: async config => {\n    const response = await api.post(BASE_URL, config);\n    return response.data;\n  },\n  // Update hotel configuration\n  updateConfig: async (id, config) => {\n    const response = await api.patch(`${BASE_URL}/${id}`, config);\n    return response.data;\n  },\n  // Features management\n  addFeature: async feature => {\n    const response = await api.post(`${BASE_URL}/features`, feature);\n    return response.data;\n  },\n  updateFeature: async (id, feature) => {\n    const response = await api.patch(`${BASE_URL}/features/${id}`, feature);\n    return response.data;\n  },\n  deleteFeature: async id => {\n    await api.delete(`${BASE_URL}/features/${id}`);\n  },\n  // Room types management\n  addRoomType: async roomType => {\n    const response = await api.post(`${BASE_URL}/room-types`, roomType);\n    return response.data;\n  },\n  updateRoomType: async (id, roomType) => {\n    const response = await api.patch(`${BASE_URL}/room-types/${id}`, roomType);\n    return response.data;\n  },\n  deleteRoomType: async id => {\n    await api.delete(`${BASE_URL}/room-types/${id}`);\n  },\n  // Floors management\n  addFloor: async floor => {\n    const response = await api.post(`${BASE_URL}/floors`, floor);\n    return response.data;\n  },\n  updateFloor: async (id, floor) => {\n    const response = await api.patch(`${BASE_URL}/floors/${id}`, floor);\n    return response.data;\n  },\n  deleteFloor: async id => {\n    await api.delete(`${BASE_URL}/floors/${id}`);\n  },\n  // Room templates management\n  addRoomTemplate: async template => {\n    const response = await api.post(`${BASE_URL}/room-templates`, template);\n    return response.data;\n  },\n  updateRoomTemplate: async (id, template) => {\n    const response = await api.patch(`${BASE_URL}/room-templates/${id}`, template);\n    return response.data;\n  },\n  deleteRoomTemplate: async id => {\n    await api.delete(`${BASE_URL}/room-templates/${id}`);\n  },\n  // Bulk room template creation\n  createBulkRoomTemplates: async templates => {\n    const response = await api.post(`${BASE_URL}/room-templates/bulk`, {\n      templates\n    });\n    return response.data;\n  }\n};","map":{"version":3,"names":["api","BASE_URL","hotelConfigService","getCurrentConfig","response","get","data","setCurrentConfig","configId","post","getAllConfigs","createConfig","config","updateConfig","id","patch","addFeature","feature","updateFeature","deleteFeature","delete","addRoomType","roomType","updateRoomType","deleteRoomType","addFloor","floor","updateFloor","deleteFloor","addRoomTemplate","template","updateRoomTemplate","deleteRoomTemplate","createBulkRoomTemplates","templates"],"sources":["C:/Users/CLIZARDE/2024/ProyectosPersonales/aiFront-Desk/frontend/src/services/hotelConfigService.ts"],"sourcesContent":["import { api } from './api';\r\nimport type { \r\n  HotelConfiguration, \r\n  HotelConfigFormData, \r\n  HotelFeature, \r\n  RoomType, \r\n  Floor, \r\n  RoomTemplate \r\n} from '../types/hotel';\r\n\r\nconst BASE_URL = '/api/hotel/config';\r\n\r\nexport const hotelConfigService = {\r\n  // Get current hotel configuration\r\n  getCurrentConfig: async (): Promise<HotelConfiguration> => {\r\n    const response = await api.get(`${BASE_URL}/current`);\r\n    return response.data;\r\n  },\r\n\r\n  // Set current hotel configuration\r\n  setCurrentConfig: async (configId: string): Promise<HotelConfiguration> => {\r\n    const response = await api.post(`${BASE_URL}/current`, { configId });\r\n    return response.data;\r\n  },\r\n\r\n  // Get all hotel configurations\r\n  getAllConfigs: async (): Promise<HotelConfiguration[]> => {\r\n    const response = await api.get(BASE_URL);\r\n    return response.data;\r\n  },\r\n\r\n  // Create new hotel configuration\r\n  createConfig: async (config: HotelConfigFormData): Promise<HotelConfiguration> => {\r\n    const response = await api.post(BASE_URL, config);\r\n    return response.data;\r\n  },\r\n\r\n  // Update hotel configuration\r\n  updateConfig: async (id: string, config: Partial<HotelConfigFormData>): Promise<HotelConfiguration> => {\r\n    const response = await api.patch(`${BASE_URL}/${id}`, config);\r\n    return response.data;\r\n  },\r\n\r\n  // Features management\r\n  addFeature: async (feature: Omit<HotelFeature, 'id'>): Promise<HotelFeature> => {\r\n    const response = await api.post(`${BASE_URL}/features`, feature);\r\n    return response.data;\r\n  },\r\n\r\n  updateFeature: async (id: string, feature: Partial<HotelFeature>): Promise<HotelFeature> => {\r\n    const response = await api.patch(`${BASE_URL}/features/${id}`, feature);\r\n    return response.data;\r\n  },\r\n\r\n  deleteFeature: async (id: string): Promise<void> => {\r\n    await api.delete(`${BASE_URL}/features/${id}`);\r\n  },\r\n\r\n  // Room types management\r\n  addRoomType: async (roomType: Omit<RoomType, 'id'>): Promise<RoomType> => {\r\n    const response = await api.post(`${BASE_URL}/room-types`, roomType);\r\n    return response.data;\r\n  },\r\n\r\n  updateRoomType: async (id: string, roomType: Partial<RoomType>): Promise<RoomType> => {\r\n    const response = await api.patch(`${BASE_URL}/room-types/${id}`, roomType);\r\n    return response.data;\r\n  },\r\n\r\n  deleteRoomType: async (id: string): Promise<void> => {\r\n    await api.delete(`${BASE_URL}/room-types/${id}`);\r\n  },\r\n\r\n  // Floors management\r\n  addFloor: async (floor: Omit<Floor, 'id'>): Promise<Floor> => {\r\n    const response = await api.post(`${BASE_URL}/floors`, floor);\r\n    return response.data;\r\n  },\r\n\r\n  updateFloor: async (id: string, floor: Partial<Floor>): Promise<Floor> => {\r\n    const response = await api.patch(`${BASE_URL}/floors/${id}`, floor);\r\n    return response.data;\r\n  },\r\n\r\n  deleteFloor: async (id: string): Promise<void> => {\r\n    await api.delete(`${BASE_URL}/floors/${id}`);\r\n  },\r\n\r\n  // Room templates management\r\n  addRoomTemplate: async (template: Omit<RoomTemplate, 'id'>): Promise<RoomTemplate> => {\r\n    const response = await api.post(`${BASE_URL}/room-templates`, template);\r\n    return response.data;\r\n  },\r\n\r\n  updateRoomTemplate: async (id: string, template: Partial<RoomTemplate>): Promise<RoomTemplate> => {\r\n    const response = await api.patch(`${BASE_URL}/room-templates/${id}`, template);\r\n    return response.data;\r\n  },\r\n\r\n  deleteRoomTemplate: async (id: string): Promise<void> => {\r\n    await api.delete(`${BASE_URL}/room-templates/${id}`);\r\n  },\r\n\r\n  // Bulk room template creation\r\n  createBulkRoomTemplates: async (templates: Omit<RoomTemplate, 'id'>[]): Promise<RoomTemplate[]> => {\r\n    const response = await api.post(`${BASE_URL}/room-templates/bulk`, { templates });\r\n    return response.data;\r\n  },\r\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}