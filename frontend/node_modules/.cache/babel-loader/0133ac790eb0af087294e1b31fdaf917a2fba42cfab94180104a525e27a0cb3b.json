{"ast":null,"code":"import axios from 'axios';\n\n// Get environment variables with fallbacks\nconst getEnvVar = (key, fallback) => {\n  try {\n    // Check if we're in a browser environment\n    if (typeof window === 'undefined') {\n      return fallback;\n    }\n\n    // Try to get the environment variable\n    const value = import.meta.env[key];\n    if (value === undefined || value === '') {\n      console.warn(`Environment variable ${key} is not defined or empty, using fallback: ${fallback}`);\n      return fallback;\n    }\n    return value;\n  } catch (error) {\n    console.warn(`Error accessing environment variable ${key}, using fallback: ${fallback}`, error);\n    return fallback;\n  }\n};\n\n// Default configuration\nconst DEFAULT_CONFIG = {\n  API_URL: 'http://localhost:3001',\n  ENABLE_MOCK_API: 'true',\n  APP_NAME: 'Hotel AI Front Desk',\n  APP_VERSION: '1.0.0'\n};\n\n// Check if we're in mock mode\nconst isMockMode = getEnvVar('VITE_ENABLE_MOCK_API', DEFAULT_CONFIG.ENABLE_MOCK_API) === 'true';\n\n// Create axios instance with default config\nexport const api = axios.create({\n  baseURL: isMockMode ? '' : getEnvVar('VITE_API_URL', DEFAULT_CONFIG.API_URL),\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Add request interceptor for authentication and logging\napi.interceptors.request.use(config => {\n  // Add auth token if available\n  const token = localStorage.getItem('auth_token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n\n  // Log request in development\n  if (process.env.NODE_ENV === 'development') {\n    var _config$method;\n    console.log(`üöÄ [${(_config$method = config.method) === null || _config$method === void 0 ? void 0 : _config$method.toUpperCase()}] ${config.url}`, {\n      baseURL: config.baseURL,\n      headers: config.headers,\n      data: config.data,\n      mockMode: isMockMode\n    });\n  }\n  return config;\n});\n\n// Add response interceptor for error handling and logging\napi.interceptors.response.use(response => {\n  // Log response in development\n  if (process.env.NODE_ENV === 'development') {\n    console.log(`‚úÖ [${response.status}] ${response.config.url}`, {\n      data: response.data,\n      mockMode: isMockMode\n    });\n  }\n  return response;\n}, async error => {\n  var _error$response3;\n  // Log error in development\n  if (process.env.NODE_ENV === 'development') {\n    var _error$response, _error$config, _error$response2;\n    console.error(`‚ùå [${((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) || 'NO RESPONSE'}] ${(_error$config = error.config) === null || _error$config === void 0 ? void 0 : _error$config.url}`, {\n      error: error.message,\n      response: (_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data,\n      mockMode: isMockMode\n    });\n  }\n  if (((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.status) === 401) {\n    // Handle unauthorized access\n    localStorage.removeItem('auth_token');\n    window.location.href = '/login';\n  }\n\n  // Provide more helpful error messages in development\n  if (process.env.NODE_ENV === 'development' && !error.response) {\n    if (isMockMode) {\n      console.warn('‚ö†Ô∏è No response received. Make sure the mock service worker is running.');\n    } else {\n      console.warn('‚ö†Ô∏è No response received. Make sure the backend server is running at:', getEnvVar('VITE_API_URL', DEFAULT_CONFIG.API_URL));\n    }\n  }\n  return Promise.reject(error);\n});","map":{"version":3,"names":["axios","getEnvVar","key","fallback","window","value","import","meta","env","undefined","console","warn","error","DEFAULT_CONFIG","API_URL","ENABLE_MOCK_API","APP_NAME","APP_VERSION","isMockMode","api","create","baseURL","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","process","NODE_ENV","_config$method","log","method","toUpperCase","url","data","mockMode","response","status","_error$response3","_error$response","_error$config","_error$response2","message","removeItem","location","href","Promise","reject"],"sources":["C:/Users/CLIZARDE/2024/ProyectosPersonales/aiFront-Desk/frontend/src/services/api.ts"],"sourcesContent":["import axios from 'axios';\r\n\r\n// Get environment variables with fallbacks\r\nconst getEnvVar = (key: keyof ImportMetaEnv, fallback: string): string => {\r\n  try {\r\n    // Check if we're in a browser environment\r\n    if (typeof window === 'undefined') {\r\n      return fallback;\r\n    }\r\n\r\n    // Try to get the environment variable\r\n    const value = import.meta.env[key];\r\n    if (value === undefined || value === '') {\r\n      console.warn(`Environment variable ${key} is not defined or empty, using fallback: ${fallback}`);\r\n      return fallback;\r\n    }\r\n\r\n    return value;\r\n  } catch (error) {\r\n    console.warn(`Error accessing environment variable ${key}, using fallback: ${fallback}`, error);\r\n    return fallback;\r\n  }\r\n};\r\n\r\n// Default configuration\r\nconst DEFAULT_CONFIG = {\r\n  API_URL: 'http://localhost:3001',\r\n  ENABLE_MOCK_API: 'true',\r\n  APP_NAME: 'Hotel AI Front Desk',\r\n  APP_VERSION: '1.0.0',\r\n} as const;\r\n\r\n// Check if we're in mock mode\r\nconst isMockMode = getEnvVar('VITE_ENABLE_MOCK_API', DEFAULT_CONFIG.ENABLE_MOCK_API) === 'true';\r\n\r\n// Create axios instance with default config\r\nexport const api = axios.create({\r\n  baseURL: isMockMode ? '' : getEnvVar('VITE_API_URL', DEFAULT_CONFIG.API_URL),\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n});\r\n\r\n// Add request interceptor for authentication and logging\r\napi.interceptors.request.use((config) => {\r\n  // Add auth token if available\r\n  const token = localStorage.getItem('auth_token');\r\n  if (token) {\r\n    config.headers.Authorization = `Bearer ${token}`;\r\n  }\r\n\r\n  // Log request in development\r\n  if (process.env.NODE_ENV === 'development') {\r\n    console.log(`üöÄ [${config.method?.toUpperCase()}] ${config.url}`, {\r\n      baseURL: config.baseURL,\r\n      headers: config.headers,\r\n      data: config.data,\r\n      mockMode: isMockMode,\r\n    });\r\n  }\r\n\r\n  return config;\r\n});\r\n\r\n// Add response interceptor for error handling and logging\r\napi.interceptors.response.use(\r\n  (response) => {\r\n    // Log response in development\r\n    if (process.env.NODE_ENV === 'development') {\r\n      console.log(`‚úÖ [${response.status}] ${response.config.url}`, {\r\n        data: response.data,\r\n        mockMode: isMockMode,\r\n      });\r\n    }\r\n    return response;\r\n  },\r\n  async (error) => {\r\n    // Log error in development\r\n    if (process.env.NODE_ENV === 'development') {\r\n      console.error(`‚ùå [${error.response?.status || 'NO RESPONSE'}] ${error.config?.url}`, {\r\n        error: error.message,\r\n        response: error.response?.data,\r\n        mockMode: isMockMode,\r\n      });\r\n    }\r\n\r\n    if (error.response?.status === 401) {\r\n      // Handle unauthorized access\r\n      localStorage.removeItem('auth_token');\r\n      window.location.href = '/login';\r\n    }\r\n\r\n    // Provide more helpful error messages in development\r\n    if (process.env.NODE_ENV === 'development' && !error.response) {\r\n      if (isMockMode) {\r\n        console.warn('‚ö†Ô∏è No response received. Make sure the mock service worker is running.');\r\n      } else {\r\n        console.warn('‚ö†Ô∏è No response received. Make sure the backend server is running at:', getEnvVar('VITE_API_URL', DEFAULT_CONFIG.API_URL));\r\n      }\r\n    }\r\n\r\n    return Promise.reject(error);\r\n  }\r\n); "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}