{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\CLIZARDE\\\\2024\\\\ProyectosPersonales\\\\aiFront-Desk\\\\frontend\\\\src\\\\components\\\\HotelConfig\\\\steps\\\\RoomTemplatesStep.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Box, Typography, Grid, TextField, Button, IconButton, Paper, List, ListItem, ListItemText, ListItemSecondaryAction, Dialog, DialogTitle, DialogContent, DialogActions, FormControl, InputLabel, Select, MenuItem, Chip, OutlinedInput, InputAdornment, Alert } from '@mui/material';\nimport { Add as AddIcon, Edit as EditIcon, Delete as DeleteIcon } from '@mui/icons-material';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst RoomTemplatesStep = ({\n  initialData,\n  roomTypes,\n  floors,\n  features,\n  onComplete\n}) => {\n  _s();\n  const [roomTemplates, setRoomTemplates] = useState(initialData);\n  const [isDialogOpen, setIsDialogOpen] = useState(false);\n  const [editingIndex, setEditingIndex] = useState(null);\n  const [formData, setFormData] = useState({\n    typeId: '',\n    floorId: '',\n    name: '',\n    capacity: 2,\n    features: [],\n    rate: 0,\n    notes: ''\n  });\n  useEffect(() => {\n    setRoomTemplates(initialData);\n  }, [initialData]);\n  const handleOpenDialog = index => {\n    if (typeof index === 'number') {\n      const template = roomTemplates[index];\n      setEditingIndex(index);\n      setFormData({\n        typeId: template.typeId,\n        floorId: template.floorId,\n        name: template.name,\n        capacity: template.capacity,\n        features: template.features,\n        rate: template.rate,\n        notes: template.notes || ''\n      });\n    } else {\n      setEditingIndex(null);\n      setFormData({\n        typeId: '',\n        floorId: '',\n        name: '',\n        capacity: 2,\n        features: [],\n        rate: 0,\n        notes: ''\n      });\n    }\n    setIsDialogOpen(true);\n  };\n  const handleCloseDialog = () => {\n    setIsDialogOpen(false);\n    setEditingIndex(null);\n    setFormData({\n      typeId: '',\n      floorId: '',\n      name: '',\n      capacity: 2,\n      features: [],\n      rate: 0,\n      notes: ''\n    });\n  };\n  const handleSaveTemplate = () => {\n    if (!formData.typeId || !formData.floorId || !formData.name) return;\n    const selectedRoomType = roomTypes.find(rt => rt.name === formData.typeId);\n    if (!selectedRoomType) return;\n    const newTemplate = {\n      typeId: formData.typeId,\n      floorId: formData.floorId,\n      name: formData.name,\n      capacity: formData.capacity,\n      features: formData.features,\n      rate: formData.rate || selectedRoomType.baseRate,\n      notes: formData.notes || undefined\n    };\n    let newTemplates;\n    if (typeof editingIndex === 'number') {\n      newTemplates = [...roomTemplates];\n      newTemplates[editingIndex] = newTemplate;\n    } else {\n      newTemplates = [...roomTemplates, newTemplate];\n    }\n    setRoomTemplates(newTemplates);\n    onComplete(newTemplates);\n    handleCloseDialog();\n  };\n  const handleDeleteTemplate = index => {\n    const newTemplates = roomTemplates.filter((_, i) => i !== index);\n    setRoomTemplates(newTemplates);\n    onComplete(newTemplates);\n  };\n  const getRoomTypeInfo = typeId => {\n    return roomTypes.find(rt => rt.name === typeId);\n  };\n  const getFloorInfo = floorId => {\n    return floors.find(f => f.name === floorId);\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      gutterBottom: true,\n      children: \"Room Templates\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"body2\",\n      color: \"text.secondary\",\n      paragraph: true,\n      children: \"Define individual room templates based on your room types and floors. Each template represents a specific room in your hotel.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 7\n    }, this), roomTypes.length === 0 && /*#__PURE__*/_jsxDEV(Alert, {\n      severity: \"warning\",\n      sx: {\n        mb: 2\n      },\n      children: \"Please add at least one room type before creating room templates.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 9\n    }, this), floors.length === 0 && /*#__PURE__*/_jsxDEV(Alert, {\n      severity: \"warning\",\n      sx: {\n        mb: 2\n      },\n      children: \"Please add at least one floor before creating room templates.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        mb: 3\n      },\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        startIcon: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 22\n        }, this),\n        onClick: () => handleOpenDialog(),\n        disabled: roomTypes.length === 0 || floors.length === 0,\n        children: \"Add Room Template\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 2,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(Paper, {\n          children: /*#__PURE__*/_jsxDEV(List, {\n            children: [roomTemplates.map((template, index) => {\n              const roomType = getRoomTypeInfo(template.typeId);\n              const floor = getFloorInfo(template.floorId);\n              return /*#__PURE__*/_jsxDEV(ListItem, {\n                children: [/*#__PURE__*/_jsxDEV(ListItemText, {\n                  primary: `${template.name} (${template.number})`,\n                  secondary: /*#__PURE__*/_jsxDEV(_Fragment, {\n                    children: [/*#__PURE__*/_jsxDEV(Typography, {\n                      component: \"span\",\n                      variant: \"body2\",\n                      color: \"text.primary\",\n                      children: [roomType === null || roomType === void 0 ? void 0 : roomType.name, \" \\u2022 Floor \", floor === null || floor === void 0 ? void 0 : floor.number, \" \\u2022 $\", template.rate, \"/night \\u2022 \", template.capacity, \" \", template.capacity === 1 ? 'person' : 'persons']\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 201,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 204,\n                      columnNumber: 27\n                    }, this), template.notes, /*#__PURE__*/_jsxDEV(Box, {\n                      sx: {\n                        mt: 1\n                      },\n                      children: template.features.map(featureId => {\n                        const feature = features.find(f => f.name === featureId);\n                        return feature ? /*#__PURE__*/_jsxDEV(Chip, {\n                          label: feature.name,\n                          size: \"small\",\n                          sx: {\n                            mr: 0.5,\n                            mb: 0.5\n                          }\n                        }, featureId, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 210,\n                          columnNumber: 33\n                        }, this) : null;\n                      })\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 206,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 197,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(ListItemSecondaryAction, {\n                  children: [/*#__PURE__*/_jsxDEV(IconButton, {\n                    edge: \"end\",\n                    \"aria-label\": \"edit\",\n                    onClick: () => handleOpenDialog(index),\n                    sx: {\n                      mr: 1\n                    },\n                    children: /*#__PURE__*/_jsxDEV(EditIcon, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 229,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 223,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n                    edge: \"end\",\n                    \"aria-label\": \"delete\",\n                    onClick: () => handleDeleteTemplate(index),\n                    children: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 236,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 231,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 222,\n                  columnNumber: 21\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 196,\n                columnNumber: 19\n              }, this);\n            }), roomTemplates.length === 0 && /*#__PURE__*/_jsxDEV(ListItem, {\n              children: /*#__PURE__*/_jsxDEV(ListItemText, {\n                primary: \"No room templates added yet\",\n                secondary: \"Click 'Add Room Template' to get started\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 244,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 243,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: isDialogOpen,\n      onClose: handleCloseDialog,\n      maxWidth: \"sm\",\n      fullWidth: true,\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: editingIndex !== null ? 'Edit Room Template' : 'Add New Room Template'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            pt: 2\n          },\n          children: [/*#__PURE__*/_jsxDEV(FormControl, {\n            fullWidth: true,\n            required: true,\n            sx: {\n              mb: 2\n            },\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              children: \"Room Type\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 262,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              value: formData.typeId,\n              onChange: e => {\n                const typeId = e.target.value;\n                const roomType = roomTypes.find(rt => rt.name === typeId);\n                setFormData({\n                  ...formData,\n                  typeId,\n                  capacity: (roomType === null || roomType === void 0 ? void 0 : roomType.defaultCapacity) || formData.capacity,\n                  rate: (roomType === null || roomType === void 0 ? void 0 : roomType.baseRate) || formData.rate\n                });\n              },\n              input: /*#__PURE__*/_jsxDEV(OutlinedInput, {\n                label: \"Room Type\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 275,\n                columnNumber: 24\n              }, this),\n              children: roomTypes.map(type => /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: type.name,\n                children: type.name\n              }, type.name, false, {\n                fileName: _jsxFileName,\n                lineNumber: 278,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 263,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n            fullWidth: true,\n            required: true,\n            sx: {\n              mb: 2\n            },\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              children: \"Floor\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 286,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              value: formData.floorId,\n              onChange: e => setFormData({\n                ...formData,\n                floorId: e.target.value\n              }),\n              input: /*#__PURE__*/_jsxDEV(OutlinedInput, {\n                label: \"Floor\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 290,\n                columnNumber: 24\n              }, this),\n              children: floors.map(floor => /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: floor.name,\n                children: [floor.name, \" (Floor \", floor.number, \")\"]\n              }, floor.name, true, {\n                fileName: _jsxFileName,\n                lineNumber: 293,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 287,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 285,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            spacing: 2,\n            sx: {\n              mb: 2\n            },\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 6,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                fullWidth: true,\n                required: true,\n                label: \"Room Name\",\n                value: formData.name,\n                onChange: e => setFormData({\n                  ...formData,\n                  name: e.target.value\n                }),\n                placeholder: \"e.g., Presidential Suite 1\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 302,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 301,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 300,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            spacing: 2,\n            sx: {\n              mb: 2\n            },\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 6,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                fullWidth: true,\n                required: true,\n                type: \"number\",\n                label: \"Capacity\",\n                value: formData.capacity,\n                onChange: e => setFormData({\n                  ...formData,\n                  capacity: Number(e.target.value)\n                }),\n                inputProps: {\n                  min: 1,\n                  max: 10\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 315,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 314,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 6,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                fullWidth: true,\n                type: \"number\",\n                label: \"Rate\",\n                value: formData.rate,\n                onChange: e => setFormData({\n                  ...formData,\n                  rate: Number(e.target.value)\n                }),\n                InputProps: {\n                  startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n                    position: \"start\",\n                    children: \"$\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 333,\n                    columnNumber: 37\n                  }, this)\n                },\n                helperText: \"Leave empty to use room type base rate\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 326,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 325,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 313,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n            fullWidth: true,\n            sx: {\n              mb: 2\n            },\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              children: \"Additional Features\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 341,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              multiple: true,\n              value: formData.features,\n              onChange: e => setFormData({\n                ...formData,\n                features: e.target.value\n              }),\n              input: /*#__PURE__*/_jsxDEV(OutlinedInput, {\n                label: \"Additional Features\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 346,\n                columnNumber: 24\n              }, this),\n              renderValue: selected => /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  display: 'flex',\n                  flexWrap: 'wrap',\n                  gap: 0.5\n                },\n                children: selected.map(value => {\n                  const feature = features.find(f => f.name === value);\n                  return feature ? /*#__PURE__*/_jsxDEV(Chip, {\n                    label: feature.name,\n                    size: \"small\"\n                  }, value, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 352,\n                    columnNumber: 25\n                  }, this) : null;\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 348,\n                columnNumber: 19\n              }, this),\n              children: features.map(feature => /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: feature.name,\n                children: feature.name\n              }, feature.name, false, {\n                fileName: _jsxFileName,\n                lineNumber: 359,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 342,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 340,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            label: \"Notes\",\n            value: formData.notes,\n            onChange: e => setFormData({\n              ...formData,\n              notes: e.target.value\n            }),\n            multiline: true,\n            rows: 2,\n            placeholder: \"Add any special notes about this room...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 366,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleCloseDialog,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 378,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleSaveTemplate,\n          variant: \"contained\",\n          disabled: !formData.typeId || !formData.floorId || !formData.name,\n          children: editingIndex !== null ? 'Save Changes' : 'Add Room Template'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 379,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 377,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 157,\n    columnNumber: 5\n  }, this);\n};\n_s(RoomTemplatesStep, \"Y3C6gscU9FOo2YCIyH0tAJeG7iE=\");\n_c = RoomTemplatesStep;\nexport default RoomTemplatesStep;\nvar _c;\n$RefreshReg$(_c, \"RoomTemplatesStep\");","map":{"version":3,"names":["React","useState","useEffect","Box","Typography","Grid","TextField","Button","IconButton","Paper","List","ListItem","ListItemText","ListItemSecondaryAction","Dialog","DialogTitle","DialogContent","DialogActions","FormControl","InputLabel","Select","MenuItem","Chip","OutlinedInput","InputAdornment","Alert","Add","AddIcon","Edit","EditIcon","Delete","DeleteIcon","jsxDEV","_jsxDEV","Fragment","_Fragment","RoomTemplatesStep","initialData","roomTypes","floors","features","onComplete","_s","roomTemplates","setRoomTemplates","isDialogOpen","setIsDialogOpen","editingIndex","setEditingIndex","formData","setFormData","typeId","floorId","name","capacity","rate","notes","handleOpenDialog","index","template","handleCloseDialog","handleSaveTemplate","selectedRoomType","find","rt","newTemplate","baseRate","undefined","newTemplates","handleDeleteTemplate","filter","_","i","getRoomTypeInfo","getFloorInfo","f","children","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","color","paragraph","length","severity","sx","mb","startIcon","onClick","disabled","container","spacing","item","xs","map","roomType","floor","primary","number","secondary","component","mt","featureId","feature","label","size","mr","edge","open","onClose","maxWidth","fullWidth","pt","required","value","onChange","e","target","defaultCapacity","input","type","placeholder","Number","inputProps","min","max","InputProps","startAdornment","position","helperText","multiple","renderValue","selected","display","flexWrap","gap","multiline","rows","_c","$RefreshReg$"],"sources":["C:/Users/CLIZARDE/2024/ProyectosPersonales/aiFront-Desk/frontend/src/components/HotelConfig/steps/RoomTemplatesStep.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport {\r\n  Box,\r\n  Typography,\r\n  Grid,\r\n  TextField,\r\n  Button,\r\n  IconButton,\r\n  Paper,\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  ListItemSecondaryAction,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  FormControl,\r\n  InputLabel,\r\n  Select,\r\n  MenuItem,\r\n  Chip,\r\n  OutlinedInput,\r\n  InputAdornment,\r\n  Alert,\r\n} from '@mui/material';\r\nimport { Add as AddIcon, Edit as EditIcon, Delete as DeleteIcon } from '@mui/icons-material';\r\nimport type { RoomTemplate, RoomType, Floor, HotelFeature } from '../../../types/hotel';\r\n\r\ninterface RoomTemplatesStepProps {\r\n  initialData: Omit<RoomTemplate, 'id'>[];\r\n  roomTypes: Omit<RoomType, 'id'>[];\r\n  floors: Omit<Floor, 'id'>[];\r\n  features: Omit<HotelFeature, 'id'>[];\r\n  onComplete: (roomTemplates: Omit<RoomTemplate, 'id'>[]) => void;\r\n}\r\n\r\ninterface RoomTemplateFormData {\r\n  typeId: string;\r\n  floorId: string;\r\n  name: string;\r\n  capacity: number;\r\n  features: string[];\r\n  rate: number;\r\n  notes: string;\r\n}\r\n\r\nconst RoomTemplatesStep: React.FC<RoomTemplatesStepProps> = ({\r\n  initialData,\r\n  roomTypes,\r\n  floors,\r\n  features,\r\n  onComplete,\r\n}) => {\r\n  const [roomTemplates, setRoomTemplates] = useState<Omit<RoomTemplate, 'id'>[]>(initialData);\r\n  const [isDialogOpen, setIsDialogOpen] = useState(false);\r\n  const [editingIndex, setEditingIndex] = useState<number | null>(null);\r\n  const [formData, setFormData] = useState<RoomTemplateFormData>({\r\n    typeId: '',\r\n    floorId: '',\r\n    name: '',\r\n    capacity: 2,\r\n    features: [],\r\n    rate: 0,\r\n    notes: '',\r\n  });\r\n\r\n  useEffect(() => {\r\n    setRoomTemplates(initialData);\r\n  }, [initialData]);\r\n\r\n  const handleOpenDialog = (index?: number) => {\r\n    if (typeof index === 'number') {\r\n      const template = roomTemplates[index];\r\n      setEditingIndex(index);\r\n      setFormData({\r\n        typeId: template.typeId,\r\n        floorId: template.floorId,\r\n        name: template.name,\r\n        capacity: template.capacity,\r\n        features: template.features,\r\n        rate: template.rate,\r\n        notes: template.notes || '',\r\n      });\r\n    } else {\r\n      setEditingIndex(null);\r\n      setFormData({\r\n        typeId: '',\r\n        floorId: '',\r\n        name: '',\r\n        capacity: 2,\r\n        features: [],\r\n        rate: 0,\r\n        notes: '',\r\n      });\r\n    }\r\n    setIsDialogOpen(true);\r\n  };\r\n\r\n  const handleCloseDialog = () => {\r\n    setIsDialogOpen(false);\r\n    setEditingIndex(null);\r\n    setFormData({\r\n      typeId: '',\r\n      floorId: '',\r\n      name: '',\r\n      capacity: 2,\r\n      features: [],\r\n      rate: 0,\r\n      notes: '',\r\n    });\r\n  };\r\n\r\n  const handleSaveTemplate = () => {\r\n    if (!formData.typeId || !formData.floorId || !formData.name) return;\r\n\r\n    const selectedRoomType = roomTypes.find(rt => rt.name === formData.typeId);\r\n    if (!selectedRoomType) return;\r\n\r\n    const newTemplate: Omit<RoomTemplate, 'id'> = {\r\n      typeId: formData.typeId,\r\n      floorId: formData.floorId,\r\n      name: formData.name,\r\n      capacity: formData.capacity,\r\n      features: formData.features,\r\n      rate: formData.rate || selectedRoomType.baseRate,\r\n      notes: formData.notes || undefined,\r\n    };\r\n\r\n    let newTemplates: Omit<RoomTemplate, 'id'>[];\r\n    if (typeof editingIndex === 'number') {\r\n      newTemplates = [...roomTemplates];\r\n      newTemplates[editingIndex] = newTemplate;\r\n    } else {\r\n      newTemplates = [...roomTemplates, newTemplate];\r\n    }\r\n    setRoomTemplates(newTemplates);\r\n    onComplete(newTemplates);\r\n    handleCloseDialog();\r\n  };\r\n\r\n  const handleDeleteTemplate = (index: number) => {\r\n    const newTemplates = roomTemplates.filter((_, i) => i !== index);\r\n    setRoomTemplates(newTemplates);\r\n    onComplete(newTemplates);\r\n  };\r\n\r\n  const getRoomTypeInfo = (typeId: string) => {\r\n    return roomTypes.find(rt => rt.name === typeId);\r\n  };\r\n\r\n  const getFloorInfo = (floorId: string) => {\r\n    return floors.find(f => f.name === floorId);\r\n  };\r\n\r\n  return (\r\n    <Box>\r\n      <Typography variant=\"h6\" gutterBottom>\r\n        Room Templates\r\n      </Typography>\r\n      <Typography variant=\"body2\" color=\"text.secondary\" paragraph>\r\n        Define individual room templates based on your room types and floors. Each template represents a specific room in your hotel.\r\n      </Typography>\r\n\r\n      {roomTypes.length === 0 && (\r\n        <Alert severity=\"warning\" sx={{ mb: 2 }}>\r\n          Please add at least one room type before creating room templates.\r\n        </Alert>\r\n      )}\r\n\r\n      {floors.length === 0 && (\r\n        <Alert severity=\"warning\" sx={{ mb: 2 }}>\r\n          Please add at least one floor before creating room templates.\r\n        </Alert>\r\n      )}\r\n\r\n      <Box sx={{ mb: 3 }}>\r\n        <Button\r\n          variant=\"contained\"\r\n          startIcon={<AddIcon />}\r\n          onClick={() => handleOpenDialog()}\r\n          disabled={roomTypes.length === 0 || floors.length === 0}\r\n        >\r\n          Add Room Template\r\n        </Button>\r\n      </Box>\r\n\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={12}>\r\n          <Paper>\r\n            <List>\r\n              {roomTemplates.map((template, index) => {\r\n                const roomType = getRoomTypeInfo(template.typeId);\r\n                const floor = getFloorInfo(template.floorId);\r\n                return (\r\n                  <ListItem key={index}>\r\n                    <ListItemText\r\n                      primary={`${template.name} (${template.number})`}\r\n                      secondary={\r\n                        <>\r\n                          <Typography component=\"span\" variant=\"body2\" color=\"text.primary\">\r\n                            {roomType?.name} • Floor {floor?.number} • ${template.rate}/night • {template.capacity} {template.capacity === 1 ? 'person' : 'persons'}\r\n                          </Typography>\r\n                          <br />\r\n                          {template.notes}\r\n                          <Box sx={{ mt: 1 }}>\r\n                            {template.features.map((featureId) => {\r\n                              const feature = features.find((f) => f.name === featureId);\r\n                              return feature ? (\r\n                                <Chip\r\n                                  key={featureId}\r\n                                  label={feature.name}\r\n                                  size=\"small\"\r\n                                  sx={{ mr: 0.5, mb: 0.5 }}\r\n                                />\r\n                              ) : null;\r\n                            })}\r\n                          </Box>\r\n                        </>\r\n                      }\r\n                    />\r\n                    <ListItemSecondaryAction>\r\n                      <IconButton\r\n                        edge=\"end\"\r\n                        aria-label=\"edit\"\r\n                        onClick={() => handleOpenDialog(index)}\r\n                        sx={{ mr: 1 }}\r\n                      >\r\n                        <EditIcon />\r\n                      </IconButton>\r\n                      <IconButton\r\n                        edge=\"end\"\r\n                        aria-label=\"delete\"\r\n                        onClick={() => handleDeleteTemplate(index)}\r\n                      >\r\n                        <DeleteIcon />\r\n                      </IconButton>\r\n                    </ListItemSecondaryAction>\r\n                  </ListItem>\r\n                );\r\n              })}\r\n              {roomTemplates.length === 0 && (\r\n                <ListItem>\r\n                  <ListItemText\r\n                    primary=\"No room templates added yet\"\r\n                    secondary=\"Click 'Add Room Template' to get started\"\r\n                  />\r\n                </ListItem>\r\n              )}\r\n            </List>\r\n          </Paper>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      <Dialog open={isDialogOpen} onClose={handleCloseDialog} maxWidth=\"sm\" fullWidth>\r\n        <DialogTitle>\r\n          {editingIndex !== null ? 'Edit Room Template' : 'Add New Room Template'}\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <Box sx={{ pt: 2 }}>\r\n            <FormControl fullWidth required sx={{ mb: 2 }}>\r\n              <InputLabel>Room Type</InputLabel>\r\n              <Select\r\n                value={formData.typeId}\r\n                onChange={(e) => {\r\n                  const typeId = e.target.value;\r\n                  const roomType = roomTypes.find(rt => rt.name === typeId);\r\n                  setFormData({\r\n                    ...formData,\r\n                    typeId,\r\n                    capacity: roomType?.defaultCapacity || formData.capacity,\r\n                    rate: roomType?.baseRate || formData.rate,\r\n                  });\r\n                }}\r\n                input={<OutlinedInput label=\"Room Type\" />}\r\n              >\r\n                {roomTypes.map((type) => (\r\n                  <MenuItem key={type.name} value={type.name}>\r\n                    {type.name}\r\n                  </MenuItem>\r\n                ))}\r\n              </Select>\r\n            </FormControl>\r\n\r\n            <FormControl fullWidth required sx={{ mb: 2 }}>\r\n              <InputLabel>Floor</InputLabel>\r\n              <Select\r\n                value={formData.floorId}\r\n                onChange={(e) => setFormData({ ...formData, floorId: e.target.value })}\r\n                input={<OutlinedInput label=\"Floor\" />}\r\n              >\r\n                {floors.map((floor) => (\r\n                  <MenuItem key={floor.name} value={floor.name}>\r\n                    {floor.name} (Floor {floor.number})\r\n                  </MenuItem>\r\n                ))}\r\n              </Select>\r\n            </FormControl>\r\n\r\n            <Grid container spacing={2} sx={{ mb: 2 }}>\r\n              <Grid item xs={6}>\r\n                <TextField\r\n                  fullWidth\r\n                  required\r\n                  label=\"Room Name\"\r\n                  value={formData.name}\r\n                  onChange={(e) => setFormData({ ...formData, name: e.target.value })}\r\n                  placeholder=\"e.g., Presidential Suite 1\"\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n\r\n            <Grid container spacing={2} sx={{ mb: 2 }}>\r\n              <Grid item xs={6}>\r\n                <TextField\r\n                  fullWidth\r\n                  required\r\n                  type=\"number\"\r\n                  label=\"Capacity\"\r\n                  value={formData.capacity}\r\n                  onChange={(e) => setFormData({ ...formData, capacity: Number(e.target.value) })}\r\n                  inputProps={{ min: 1, max: 10 }}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <TextField\r\n                  fullWidth\r\n                  type=\"number\"\r\n                  label=\"Rate\"\r\n                  value={formData.rate}\r\n                  onChange={(e) => setFormData({ ...formData, rate: Number(e.target.value) })}\r\n                  InputProps={{\r\n                    startAdornment: <InputAdornment position=\"start\">$</InputAdornment>,\r\n                  }}\r\n                  helperText=\"Leave empty to use room type base rate\"\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n\r\n            <FormControl fullWidth sx={{ mb: 2 }}>\r\n              <InputLabel>Additional Features</InputLabel>\r\n              <Select\r\n                multiple\r\n                value={formData.features}\r\n                onChange={(e) => setFormData({ ...formData, features: e.target.value as string[] })}\r\n                input={<OutlinedInput label=\"Additional Features\" />}\r\n                renderValue={(selected) => (\r\n                  <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 0.5 }}>\r\n                    {selected.map((value) => {\r\n                      const feature = features.find((f) => f.name === value);\r\n                      return feature ? (\r\n                        <Chip key={value} label={feature.name} size=\"small\" />\r\n                      ) : null;\r\n                    })}\r\n                  </Box>\r\n                )}\r\n              >\r\n                {features.map((feature) => (\r\n                  <MenuItem key={feature.name} value={feature.name}>\r\n                    {feature.name}\r\n                  </MenuItem>\r\n                ))}\r\n              </Select>\r\n            </FormControl>\r\n\r\n            <TextField\r\n              fullWidth\r\n              label=\"Notes\"\r\n              value={formData.notes}\r\n              onChange={(e) => setFormData({ ...formData, notes: e.target.value })}\r\n              multiline\r\n              rows={2}\r\n              placeholder=\"Add any special notes about this room...\"\r\n            />\r\n          </Box>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleCloseDialog}>Cancel</Button>\r\n          <Button\r\n            onClick={handleSaveTemplate}\r\n            variant=\"contained\"\r\n            disabled={!formData.typeId || !formData.floorId || !formData.name}\r\n          >\r\n            {editingIndex !== null ? 'Save Changes' : 'Add Room Template'}\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default RoomTemplatesStep; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}